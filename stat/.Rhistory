setwd("~/workspace/stat")
setwd("~/workspace/stat")
time=read.table(Czas.txt)
time=read.table('Czas.txt')
View(time)
time=read.table('Czas.txt',header = true)
time=read.table('Czas.txt',header = TRUE)
View(time)
View(time)
time=read.table('Czas.txt',header = TRUE)
setwd("~/workspace/stat")
load("~/workspace/stat/Pomiary.RData")
View(Pomiary)
time=read.table('Czas.txt',header = TRUE)
enorm(time)
library(EnvStat)
time=read.table('Czas.txt',header = TRUE)
enorm(time)
library(EnvStat)
time=read.table('Czas.txt',header = TRUE)
library('EnvStat')
time=read.table('Czas.txt',header = TRUE)
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
install.packages("EnvStats")
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
enorm(time)
library('EnvStats')
time<-read.table('Czas.txt',header = TRUE)
enorm(time)
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
enorm(unlist(time))
eexp(time)
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
eexp(time)
enorm(unlist(time))
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
eexp(time)
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
eexp(unlist(time))
enorm(unlist(time))
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
eexp(unlist(time),ci=TRUE, conf = 0.95)
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
eexp(unlist(time),ci=TRUE, conf = 0.95)
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
result
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
result.rate
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
result['rate']
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
result['Estimated Parameter(s)']
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
result
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
str(result)
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
str(result)
result['parameters']
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
str(result)
result['parameters']
result$parameters
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
str(result)
result['parameters']
result$limits
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
str(result)
result['parameters']
result$interval$limits
#Zad1
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
str(result)
result['parameters']
result$interval$limits
#Zad1
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
str(result)
result$parameters
result$interval$limits
#Zad2
qqnorm(Pomiary)
View(Pomiary)
qqline(Pomiary)
Pomiary
#Zad1
library('EnvStats')
time=read.table('Czas.txt',header = TRUE)
result=eexp(unlist(time),ci=TRUE, conf = 0.95)
str(result)
result$parameters
result$interval$limits
#Zad2
Pomiary$V1
qqnorm(Pomiary$V1)
qqnorm(Pomiary$V1)
qqline(Pomiary$V1)
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,colors('red'))
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
enorm(Pomiary$V1)
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
enorm(Pomiary$V1)
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
enorm(Pomiary$V1)
predict(Pomiarty$V1)
predict(Pomiary$V1)
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
enorm(Pomiary$V1)
predict(Pomiary$V1)
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
enorm(Pomiary$V1, mean = 3, sd = 2)
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
enorm(Pomiary$V1, ci=TRUE)
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
result=enorm(Pomiary$V1, ci=TRUE)
result$parameters
result$interval$limits
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
result=enorm(Pomiary$V1, ci=TRUE)
result$parameters
result$interval$limits
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
result=enorm(Pomiary$V1, ci=TRUE, ci, ci.param='variance')
result$parameters
result$interval$limits
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
result=enorm(Pomiary$V1, ci=TRUE, ci, ci.param='mean')
result$parameters
result$interval$limits
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
result=enorm(Pomiary$V1, ci=TRUE, ci, ci.param='variance')
result$parameters
result$interval$limits
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
result=enorm(Pomiary$V1, ci=TRUE, ci, ci.param='variance')
result$parameters**2
result$interval$limits
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
result=enorm(Pomiary$V1, ci=TRUE, ci, ci.param='variance')
result$parameters**2
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
result=enorm(Pomiary$V1, ci=TRUE, ci, ci.param='variance')
result$parameters**2
result$interval$limits
result=enorm(Pomiary$V1, ci=TRUE, ci, ci.param='variance')
result$parameters**2
result$interval$limits
#dla wariancji (E=mean^2)
result=enorm(Pomiary$V1, ci=TRUE, ci, ci.param='variance')
result$parameters[2]**2
result$interval$limits
qqnorm(Pomiary$V1)
qqline(Pomiary$V1,col='red')
#dla wartosci oczekiwanej(mean)
result=enorm(Pomiary$V1, ci=TRUE, ci, ci.param='mean')
result[1]$parameters
result$interval$limits
#dla wariancji (E=mean^2)
result=enorm(Pomiary$V1, ci=TRUE, ci, ci.param='variance')
result$parameters[2]**2
result$interval$limit
lambda.cint = function(x) {
print('elo')
}
lambda.cint(2)
View(Pomiary)
wind=read.table('Wiatry.txt', header=FALSE)
View(wind)
View(wind)
#Zad3
wind=read.table('Wiatry.txt', header=FALSE)
lambda.cint = function(x, conf) {
n=length(x)
n
}
lambda.cint(wind$V1, 0.95)
#Zad3
wind=read.table('Wiatry.txt', header=FALSE)
lambda.cint = function(x, conf) {
n=length(x)
alfa=qnorm(x)
alfa
}
lambda.cint(wind$V1, 0.95)
#Zad3
wind=read.table('Wiatry.txt', header=FALSE)
lambda.cint = function(x, conf) {
n=length(x)
alfa=qqnorm(x)
alfa
}
lambda.cint(wind$V1, 0.95)
#Zad3
wind=read.table('Wiatry.txt', header=FALSE)
lambda.cint = function(x, conf) {
n=length(x)
alfa=qqnorm(x)
alfa
}
lambda.cint(wind$V1, 0.95)
#Zad3
wind=read.table('Wiatry.txt', header=FALSE)
lambda.cint = function(x, conf) {
n=length(x)
alfa=qqnorm(x)
alfa$x
}
lambda.cint(wind$V1, 0.95)
#Zad3
wind=read.table('Wiatry.txt', header=FALSE)
lambda.cint = function(x, conf) {
n=length(x)
alfa=1-conf
zA=qnorm(1-alfa/2)
zA
}
lambda.cint(wind$V1, 0.95)
#Zad3
wind=read.table('Wiatry.txt', header=FALSE)
lambda.cint = function(x, conf) {
n=length(x)
alfa=1-conf
zA=qnorm(1-alfa/2)
zA/sqrt(n)
}
lambda.cint(wind$V1, 0.95)
var.cint<-function(x,conf.level=0.95){
m=var(x)
n=length(x)
a=1-conf.level
R=((n-1)*var(x))/(qchisq(a/2,n-1))
L=((n-1)*var(x))/(qchisq(1-a/2,n-1))
w=list(title="var", est=m,LEFT=L, RIGHT=R, conf.level=conf.level)
class(w)="confint"
return(w)
}
var.cint(wind$V1, 0.95)
var.cint<-function(x,conf.level=0.95){
m=var(x)
n=length(x)
a=1-conf.level
R=((n-1)*var(x))/(qchisq(a/2,n-1))
L=((n-1)*var(x))/(qchisq(1-a/2,n-1))
w=list(title="var", est=m,LEFT=L, RIGHT=R, conf.level=conf.level)
class(w)="confint"
return(w)
}
var.cint(wind$V1, 0.95)
print.confint = function(x){
cat(x$conf.level*100, "percent confidence interval:", "\n")
cat(x$l, " ", x$r, "\n")
}
summary.confint = function(x){
cat("\n", "Confidence interval of", x$title, "\n", "\n")
cat(x$conf.level*100, "percent confidence interval:", "\n")
cat(x$l, " ", x$r, "\n")
cat("sample estimate", "\n")
cat(x$est, "\n")
}
var.cint(wind$V1, 0.95)
print.confint = function(x){
cat(x$conf.level*100, "percent confidence interval:", "\n")
cat(x$l, " ", x$r, "\n")
}
summary.confint = function(x){
cat("\n", "Confidence interval of", x$title, "\n", "\n")
cat(x$conf.level*100, "percent confidence interval:", "\n")
cat(x$L, " ", x$R, "\n")
cat("sample estimate", "\n")
cat(x$est, "\n")
}
var.cint(wind$V1, 0.95)
print.confint = function(x){
cat(x$conf.level*100, "percent confidence interval:", "\n")
cat(x$L, " ", x$R, "\n")
}
}
var.cint(wind$V1, 0.95)
